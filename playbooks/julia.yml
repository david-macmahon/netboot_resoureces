# Ansible playbook to install julia from downloaded tarball
---
- hosts: netboot_root
  gather_facts: false
  become: true
  vars:
    # Latest version
    julia_version: '1.11.2'
    julia_checksum: 'sha256:8a372ad262d4d4d55a1044f4fe3bce7c9a4a3ce8c513d2470e58e8071eecd476'
    ## Latest LTS version
    #julia_version: '1.10.7'
    #julia_checksum: 'sha256:21b2c69806aacf191d7c81806c7d9918bddab30c7b5b8d4251389c3abe274334'
    julia_base: /opt/julia
  tasks:
    - name: ensure julia_base is an absolute path
      fail:
        msg: "julia_base ({{ julia_base }}) is not an absolute path"
      when: julia_base[0] != '/'

    - name: make directory for julia distribution download
      file:
        path: "{{ julia_base }}/download"
        owner: root
        group: root
        mode: '0755'
        state: directory

    - name: download julia
      get_url:
        url: "https://julialang-s3.julialang.org/bin/linux/x64/{{ julia_version.split('.')[0:2]|join('.') }}/julia-{{ julia_version }}-linux-x86_64.tar.gz"
        dest: "{{ julia_base }}/download"
        checksum: "{{ julia_checksum }}"

    - name: unarchive julia
      unarchive:
        src: "{{ julia_base }}/download/julia-{{ julia_version }}-linux-x86_64.tar.gz"
        dest: "{{ julia_base }}"
        remote_src: true
        creates: "{{ julia_base }}/julia-{{ julia_version }}/bin/julia"

    - name: create julia symlink in /usr/local/bin
      file:
        state: link
        src: "../../..{{ julia_base }}/julia-{{julia_version}}/bin/julia"
        path: "/usr/local/bin/{{ item }}"
        force: "{{ ansible_check_mode }}"
      loop:
        - "julia"
        - "julia{{ julia_version.split('.')[0:2]|join() }}"
